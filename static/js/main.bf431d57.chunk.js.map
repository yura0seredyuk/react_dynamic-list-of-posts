{"version":3,"sources":["api/api.js","api/posts.js","components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","api/comments.js","components/Loader/Loader.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getUserPosts","userId","a","fetch","fetchedData","json","posts","data","getPostDetails","postId","PostsList","setSelectedPostId","selectedPostId","useState","userPosts","setUserPosts","useEffect","then","result","className","map","post","key","id","title","type","onClick","NewCommentForm","addComment","nameContent","setNameContent","emailContent","setEmailContent","bodyContent","setBodyContent","onSubmit","event","preventDefault","comment","createdComment","name","email","body","method","JSON","stringify","response","placeholder","onChange","target","value","Loader","PostDetails","postDetails","setPostDetails","postComments","setPostComments","visibilityComments","setVisibilityComments","filter","handlerDeleteComment","commentId","deletePostComment","prevComments","length","App","setUserId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf431d57.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = async(userId) => {\n  const fetchedData = +userId === 0\n    ? await fetch(`${BASE_URL}/posts/`)\n    : await fetch(`${BASE_URL}/posts?userId=${userId}`);\n\n  const posts = await fetchedData.json();\n\n  return posts.data;\n};\n\nexport const getPostDetails = async(postId) => {\n  const fetchedData = await fetch(`${BASE_URL}/posts/${postId}`);\n  const posts = await fetchedData.json();\n\n  return posts.data;\n};\n","import React, { useState, useEffect } from 'react';\nimport './PostsList.scss';\nimport PropTypes from 'prop-types';\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({ setSelectedPostId, selectedPostId, userId }) => {\n  const [userPosts, setUserPosts] = useState([]);\n\n  useEffect(() => {\n    getUserPosts(userId)\n      .then(result => setUserPosts(result));\n  }, [userId]);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {userPosts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>{`[User #${post.userId}]: `}</b>\n              {post.title}\n            </div>\n\n            {selectedPostId === post.id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setSelectedPostId(0)}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setSelectedPostId(post.id)}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        ))\n        }\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  userId: PropTypes.number.isRequired,\n  selectedPostId: PropTypes.number.isRequired,\n  setSelectedPostId: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\nimport PropTypes from 'prop-types';\nimport { addNewComment } from '../../api/comments';\n\nexport const NewCommentForm = ({ postId, addComment }) => {\n  const [nameContent, setNameContent] = useState('');\n  const [emailContent, setEmailContent] = useState('');\n  const [bodyContent, setBodyContent] = useState('');\n\n  const addNameContent = (event) => {\n    setNameContent(event.target.value);\n  };\n\n  const addEmailContent = (event) => {\n    setEmailContent(event.target.value);\n  };\n\n  const addBodyContent = (event) => {\n    setBodyContent(event.target.value);\n  };\n\n  const clearForm = () => {\n    setNameContent('');\n    setEmailContent('');\n    setBodyContent('');\n  };\n\n  const handleAddComment = (event) => {\n    event.preventDefault();\n\n    const createdComment = {\n      postId,\n      name: nameContent,\n      email: emailContent,\n      body: bodyContent,\n    };\n\n    addNewComment(createdComment)\n      .then(result => result.data);\n\n    addComment(createdComment);\n    clearForm();\n  };\n\n  return (\n    <form className=\"NewCommentForm\" onSubmit={handleAddComment}>\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          onChange={addNameContent}\n          value={nameContent}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          onChange={addEmailContent}\n          value={emailContent}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          onChange={addBodyContent}\n          value={bodyContent}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number.isRequired,\n  addComment: PropTypes.func.isRequired,\n};\n","import { BASE_URL } from './api';\n\nexport const getPostComments = (postId) => {\n  const fetchedData = fetch(`${BASE_URL}/comments/`)\n    .then(response => response.json())\n    .then(result => result.data.filter(comment => comment.postId === +postId));\n\n  return fetchedData;\n};\n\nexport const deletePostComment = (commentId) => {\n  const fetchedData = fetch(\n    `${BASE_URL}/comments/${commentId}`, { method: 'DELETE' },\n  );\n\n  return fetchedData;\n};\n\nexport const addNewComment = (comment) => {\n  const fetchedData = fetch(`${BASE_URL}/comments/`, {\n    method: 'POST',\n    body: JSON.stringify({\n      postId: comment.postId,\n      name: comment.name,\n      email: comment.email,\n      body: comment.body,\n    }),\n  }).then(response => response.json());\n\n  return fetchedData;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\nimport { getPostDetails } from '../../api/posts';\nimport { getPostComments, deletePostComment } from '../../api/comments';\nimport { Loader } from '../Loader';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [postDetails, setPostDetails] = useState('');\n  const [postComments, setPostComments] = useState('');\n  const [visibilityComments, setVisibilityComments] = useState('false');\n\n  useEffect(() => {\n    getPostDetails(selectedPostId).then(result => setPostDetails(result));\n    getPostComments(selectedPostId).then(result => setPostComments(result));\n  }, [selectedPostId]);\n\n  const handleChangeVisibilityComments = () => {\n    setVisibilityComments(!visibilityComments);\n  };\n\n  const handlerDeleteComment = (commentId) => {\n    deletePostComment(commentId);\n\n    setPostComments(prevComments => prevComments.filter(\n      comment => comment.id !== commentId,\n    ));\n  };\n\n  const addComment = (comment) => {\n    setPostComments(prevComments => [...prevComments, comment]);\n  };\n\n  return (\n    <>\n      {postDetails && postComments ? (\n        <div className=\"PostDetails\">\n          <h2>Post details:</h2>\n          <section className=\"PostDetails__post\">\n            <p>{postDetails && postDetails.title}</p>\n          </section>\n\n          <section className=\"PostDetails__comments\">\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={handleChangeVisibilityComments}\n            >\n              {`${visibilityComments ? 'Hide' : 'Show'}\n          ${postComments && postComments.length} comments`}\n            </button>\n\n            {visibilityComments && (\n              <ul className=\"PostDetails__list\">\n                {postComments && postComments.map(comment => (\n                  <li className=\"PostDetails__list-item\" key={comment.id}>\n                    <button\n                      type=\"button\"\n                      className=\"PostDetails__remove-button button\"\n                      onClick={() => handlerDeleteComment(comment.id)}\n                    >\n                      X\n                    </button>\n                    <p>{comment.body}</p>\n                  </li>\n                ))}\n              </ul>\n            )}\n          </section>\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                postId={selectedPostId}\n                addComment={addComment}\n              />\n            </div>\n          </section>\n        </div>\n      ) : (\n        <>\n          <Loader />\n        </>\n      )}\n    </>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  const handleChangeSelect = (event) => {\n    setUserId(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={handleChangeSelect}\n            value={userId}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        {selectedPostId !== 0 && (\n          <div className=\"App__content\">\n            <PostDetails\n              selectedPostId={selectedPostId}\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}